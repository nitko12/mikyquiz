[{
    "question": "Stack frame definiraju koja dva registra:",
    "answers": ["rsp i rip", "rsp i rbp", "rax i rbx", "rbx i rbp"],
    "correct": "rsp i rbp"
},
{
    "question": "Koja zaštita učitava libc na nasumičnu adresu u procesu:",
    "answers": ["NX", "DEP", "ASLR", "Stack Canary"],
    "correct": "ASLR"
},
{
    "question": "Koju zaštitu zaobilazimo tehnikom Return Oriented Programming (ROP):",
    "answers": ["NX/DEP", "ASLR", "Stack Canarye", "PointerGuard"],
    "correct": "NX/DEP"
},
{
    "question": "Koju funkciju koristimo kako bismo stvorili shell iz exploita:",
    "answers": ["execute", "shell", "system", "main"],
    "correct": "system"
},
{
    "question": "U 64 bitnom sustavu gdje se, na stogu, nalazi povratna adresa iz funkcije u odnosu na base pointer:",
    "answers": ["rbp+16", "rbp+8", "rbp-16", "rbp-8"],
    "correct": "rbp-8"
},
{
    "question": "U 32 bitnom sustavu ASLR je neefektivan zbog pre malog broja bitova za randomizaciju:",
    "answers": ["točno", "netočno"],
    "correct": "točno"
},
{
    "question": "Koju python biblioteku koristimo za izradu exploitova za linux:",
    "answers": ["exploitr", "pwntools", "linpwn", "pwnelf"],
    "correct": "pwntools"
},
{
    "question": "U intel x86 arhitekturi svaka funkcija kreće:",
    "answers": ["funkcijskim prologom", "spremanjem konteksta", "alociranjem heap memorije", "nema specifičnog početka"],
    "correct": "funkcijskim prologom"
},
{
    "question": "U 64 bitnim linux sustavima prvi argument se šalje kroz koji registar:",
    "answers": ["rax", "rbp", "rdi", "rsi"],
    "correct": "rdi"
},
{
    "question": "Kako nazivamo binarne datoteke koje unutar sebe, tijekom kompajliranja, ugrade libc:",
    "answers": ["elf datoteke", "statički linkane datoteke", "dinamički linkane datoteke", "so datoteke"],
    "correct": "statički linkane datoteke"
},
{
    "question": "Za dekompilaciju .NET programa se koristi:",
    "answers": ["ILSpy", "Recaf", "AnyRun", "Cutter"],
    "correct": "ILSpy"
},
{
    "question": "Kod statičke analize programa pratimo mrežni promet:",
    "answers": ["Da", "Ne"],
    "correct": "Ne"
},
{
    "question": "Odaberi alat koji radi samo na Windowsima / napravljen je za Windowse:",
    "answers": ["strace", "gdb", "scdbg", "apktool"],
    "correct": "scdbg"
},
{
    "question": "Odaberi deobfuscator:",
    "answers": ["Detect it Easy", "Cutter", "Ghidra", "de4dot"],
    "correct": "de4dot"
},
{
    "question": "Za analizu docx/xlsx macroa se koristi:",
    "answers": ["Recaf", "oletools", "de4dot", "scdbg"],
    "correct": "oletools"
},
{
    "question": "Koji alat možete koristiti za symbolic execution?",
    "answers": ["Ghidra", "IDA Pro", "tria.ge", "Angr"],
    "correct": "Angr"
},
{
    "question": "Koji se alat koristi u browseru (web stranica je):",
    "answers": ["Hybrid Analysis", "Recaf", "pwndbg", "Decompyle++"],
    "correct": "Hybrid Analysis"
},
{
    "question": "Debugger spada pod dinamičku analizu:",
    "answers": ["Da", "Ne"],
    "correct": "Da"
},
{
    "question": "Koja će se arhitektura najvjerovatnije nalaziti na (modernom) osobnom računalu?",
    "answers": ["x86_64", "MIPS", "PowerPC", "RISC-V"],
    "correct": "x86_64"
},
{
    "question": "S kojom assembly naredbom možemo spremiti varijablu u registar?",
    "answers": ["pop", "push", "jnz", "ret"],
    "correct": "pop"
}
]
